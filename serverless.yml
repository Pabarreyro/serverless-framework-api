service: notes-app-api

# Create an optimized package for functions 
package:
  individually: true

plugins:
  - serverless-bundle # Package functions with Webpack
  - serverless-offline
  - serverless-dotenv-plugin # Load .env as environment variables

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: us-west-2

  # env variables made available to lambdas under process.env
  environment:
   tableName: notes

  # Grant Lambda functions permissions to access DynamoDB.
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:DescribeTable
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:us-west-2:*:*"

functions:
  create:
    handler: create.newNote
    events:
      - http:
          path: notes
          method: post
          cors: true
          authorizer: aws_iam
  get:
    handler: get.main
    events:
      -http:
        path: notes/{id}
        method: get
        cors: true
        authorizer: aws_iam
